---
apiVersion: v1
kind: Secret
metadata:
  name: pihole-tls
type: kubernetes.io/tls
data:
  tls.crt: ""
  tls.key: ""
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pihole-ingress
  labels:
    app: pihole
  annotations:
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  tls:
    - hosts:
      - bramble-s1
      - bramble-s2
      secretName: pihole-tls
  rules:
    - host: bramble-s1
      http:
        paths:
        - path: /pihole
          backend:
            serviceName: pihole-0-svc
            servicePort: 80
    - host: bramble-s2
      http:
        paths:
        - path: /pihole
          backend:
            serviceName: pihole-1-svc
            servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-0-svc
  labels:
    app: pihole
    svc: lb
spec:
  selector:
    statefulset.kubernetes.io/pod-name: pihole-0
  externalIPs:
    - 192.168.100.101
  ports:
    - port: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      protocol: UDP
      name: dns-udp
    - port: 80
      protocol: TCP
      name: http
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-1-svc
  labels:
    app: pihole
    svc: lb
spec:
  selector:
    statefulset.kubernetes.io/pod-name: pihole-1
  externalIPs:
    - 192.168.100.103
  ports:
    - port: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      protocol: UDP
      name: dns-udp
    - port: 80
      protocol: TCP
      name: http   
---
apiVersion: v1
kind: Service
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  clusterIP: None
  selector:
    app: pihole
  ports:
    - port: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      protocol: UDP
      name: dns-udp
    - port: 80
      protocol: TCP
      name: http
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  selector:
    matchLabels:
      app: pihole
  serviceName: "pihole"
  replicas: 2
  template:
    metadata:
      labels:
        app: pihole
    spec:
      terminationGracePeriodSeconds: 10
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 127.0.0.1
          - 1.1.1.1
      containers:
      - name: dns
        image: pihole/pihole:latest
        imagePullPolicy: Always
        env:
        - name: TZ
          value: "America/Chicago"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pihole.password-secret
        startupProbe:
          exec:
            command:
            - pihole
            - status
          failureThreshold: 6
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /admin/
            port: 80
          initialDelaySeconds: 60
          failureThreshold: 6
          periodSeconds: 10
          timeoutSeconds: 5
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 53
          hostPort: 53
          protocol: TCP
        - containerPort: 53
          hostPort: 53
          protocol: UDP
        volumeMounts:
        - name: etc
          mountPath: /etc/pihole

      # - name: exporter
      #   image: ekofr/pihole-exporter:latest
      #   imagePullPolicy: IfNotPresent
      #   env:
      #   - name: PIHOLE_HOSTNAME
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: metadata.name
      #   - name: PIHOLE_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         key: password
      #         name: pihole.password-secret
      #   - name: INTERVAL
      #     value: "30s"
      #   - name: PORT
      #     value: "9617"
      #   ports:
      #   - containerPort: 9617
      #     protocol: TCP
          
  volumeClaimTemplates:
  - metadata:
      name: etc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 500Mi
